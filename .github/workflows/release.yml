name: Build for Windows ARM64

on:
  push:

jobs:
  build-texlive-arm64:
    name: Build TL
    runs-on: ubuntu-latest
    env:
      llvm_path: "${{ github.workspace }}/llvm-mingw"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install tools
        run: |
          sudo apt update
          sudo apt install \
            build-essential rsync p7zip cmake ninja-build pkg-config autoconf automake autoconf-archive make texinfo bison flex m4 libtool libx11-dev clisp texlive-binaries
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20240619/llvm-mingw-20240619-ucrt-ubuntu-20.04-x86_64.tar.xz
          tar -xf llvm-mingw-*.tar.xz
          mv llvm-mingw-20240619-ucrt-ubuntu-20.04-x86_64 llvm-mingw
          
      - name: Setup a new (or from cache) vcpkg (and does not build any package)
        uses: lukka/run-vcpkg@v11 # Always specify the specific _version_ of the
                                  # action you need, `v11` in this case to stay up
                                  # to date with fixes on the v11 branch
        with:
          vcpkgGitCommitId: 'd5ec528843d29e3a52d745a64b469f810b2cedbf'

      - name: Install dependencies from vcpkg
        run: |
          PATH=$PATH:${{ env.llvm_path }}/bin
          # tell vcpkg to only build Release variants of the dependencies
          cd ${{ env.RUNVCPKG_VCPKG_ROOT }}
          echo "set(VCPKG_BUILD_TYPE release)" >> triplets/community/arm64-mingw-dynamic.cmake
          echo "set(VCPKG_BUILD_TYPE release)" >> triplets/community/arm64-mingw-static.cmake
          packages='icu harfbuzz[graphite2] cairo pixman libgd freetype libpng libatomic-ops readline glm ncurses eigen3 fftw3 opengl freeglut'
          ./vcpkg upgrade 
          ./vcpkg install $packages --triplet arm64-mingw-dynamic --host-triplet=x64-linux-release --clean-after-build --allow-unsupported
          cd installed/arm64-mingw-dynamic/lib/
          ln libzlib.dll.a libz.dll.a
          ln libfreeglut.dll.a libglut.dll.a 

      - name: Build
        run: |
          export vcpkg_dir=${{ env.RUNVCPKG_VCPKG_ROOT }}
          chmod 755 build-cross.sh
          ./build-cross.sh

      - name: Copy batch files
        run: |
          mkdir -p bat   
          rsync -a --delete --exclude=.svn tug.org::tldevsrc/Master/bin/windows/*.bat bat
          cp bat/ps4pdf.bat upload/windows
          cp bat/tlmgr.bat upload/windows
          cp bat/xelatex-unsafe.bat upload/windows
          cp bat/xetex-unsafe.bat upload/windows

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: texlive-upload
          path: upload

  build-luametatex-arm64:
    name: Build LuaMetaTeX and ...
    runs-on: windows-latest
    env:
      luametatex_version: "2.11.05"

    steps:
      - name: Setup devcmd
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm64

      - name: Setup a new (or from cache) vcpkg (and does not build any package)
        uses: lukka/run-vcpkg@v11 # Always specify the specific _version_ of the
                                  # action you need, `v11` in this case to stay up
                                  # to date with fixes on the v11 branch
        with:
          vcpkgGitCommitId: 'd5ec528843d29e3a52d745a64b469f810b2cedbf'

      - name: Install build tools
        run: |
          choco install ninja

      - name: Build LuaMetaTeX
        run: |
          # git clone --depth 1 --branch v${{ env.luametatex_version }} https://github.com/contextgarden/luametatex
          aria2c https://www.pragma-ade.nl/context/latest/cont-tmf.zip
          7z x cont-tmf.zip
          cd source/luametatex
          cmake -G "Ninja" -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build
          cp build/luametatex.exe ${{ github.workspace }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luametatex-upload
          path: luametatex.exe

  package:
    name: Package
    needs: [build-texlive-arm64,build-luametatex-arm64] # build-linux-win,macosx-qt5 is disabled
    runs-on: windows-latest
    
    steps:
      - name: Download temp artifacts
        uses: actions/download-artifact@v4

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            texlive-upload
            luametatex-upload

      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: p7zip mingw-w64-ucrt-x86_64-ntldd gzip

      - name: copy dlls in MSYS2
        shell: msys2 {0}
        run: |       
          cd texlive-upload
          ntldd -R --search-dir ./vcpkg-dll windows/*.exe | awk '{print $3}'| grep vcpkg  | sed 's|\\|/|g' | xargs -I{} cp -u {} windows
          mv ../luametatex-upload/luametatex.exe windows
          7z a -mx9 texlive-windows-arm64.7z windows
          tar zcvf texlive-windows-arm64.tar.gz windows
          mv texlive-windows-arm64.7z ..
          mv texlive-windows-arm64.tar.gz ..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: texlive-windows-arm64
          path: texlive-windows-arm64*

      - name: Batch release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: texlive-windows-arm64*
